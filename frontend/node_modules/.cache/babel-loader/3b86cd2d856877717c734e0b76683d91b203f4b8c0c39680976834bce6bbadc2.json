{"ast":null,"code":"var _jsxFileName = \"/Users/cuevs/Projects/employee_schedule/frontend/src/Schedule.js\",\n  _s = $RefreshSig$();\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { Container, Box, Button, Modal, ModalContent, ModalHeader, ModalFooter, Select, ModalBody } from '@chakra-ui/react';\nimport { useEffect, useState } from 'react';\nimport Nav from './Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Schedule = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [employees, setEmployees] = useState([]);\n\n  // variable to hold value of employee selected when adding shift with Add Shift button\n  // const [ employee, setEmployee ] = useState('') \n\n  const fetchEmployees = () => {\n    fetch('/employee/get_all_employees/').then(response => response.json()).then(json => {\n      for (let item of json) {\n        setEmployees(prevEmployees => [...prevEmployees, `${item.first_name} ${item.last_name}`]);\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  useEffect(() => fetchEmployees(), []);\n  const shifts = [{\n    title: 'John',\n    start: '2023-05-011T09:00:00',\n    end: '2023-05-11T14:00:00',\n    backgroundColor: 'red'\n  }, {\n    title: 'Jim',\n    start: '2023-05-11T12:00:00',\n    end: '2023-05-11T17:00:00'\n  }, {\n    title: 'Snoopy',\n    start: '2023-05-11T16:00:00',\n    end: '2023-05-11T20:00:00'\n  }, {\n    title: 'Snoopy',\n    start: '2023-05-11T09:00:00',\n    end: '2023-05-11T22:00:00'\n  }, {\n    title: 'Jane',\n    start: '2023-05-12T10:00:00',\n    end: '2023-05-12T15:00:00'\n  }];\n  const handleAdd = () => {\n    setIsOpen(true);\n  };\n  const onClose = () => {\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      height: \"1rem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxH: \"20vh\",\n      maxW: \"container.xl\",\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onClose: onClose,\n        isCentered: true,\n        children: /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: \"Enter Shift Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select student\",\n              children: employees.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 'option',\n                  children: item\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAdd,\n        children: \"Add Shift\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"timeGridWeek\",\n        weekends: false,\n        events: shifts,\n        slotMinTime: \"07:00:00\",\n        slotMaxTime: \"22:00:00\",\n        eventColor: \"#378006\",\n        selectable: true,\n        slotEventOverlap: false,\n        allDaySlot: false,\n        eventClick: () => alert('lol you clicked this fool')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Schedule, \"i1pIT06vk/sMjP2ndjCo2YsqogI=\");\n_c = Schedule;\nexport default Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Container","Box","Button","Modal","ModalContent","ModalHeader","ModalFooter","Select","ModalBody","useEffect","useState","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","Schedule","_s","isOpen","setIsOpen","employees","setEmployees","fetchEmployees","fetch","then","response","json","item","prevEmployees","first_name","last_name","catch","error","console","shifts","title","start","end","backgroundColor","handleAdd","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","height","maxH","maxW","isCentered","placeholder","map","index","value","onClick","plugins","initialView","weekends","events","slotMinTime","slotMaxTime","eventColor","selectable","slotEventOverlap","allDaySlot","eventClick","alert","_c","$RefreshReg$"],"sources":["/Users/cuevs/Projects/employee_schedule/frontend/src/Schedule.js"],"sourcesContent":["import FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from \"@fullcalendar/interaction\"; \n\nimport { Container, Box, Button, Modal, ModalContent, ModalHeader, ModalFooter, Select, ModalBody } from '@chakra-ui/react';\n\nimport { useEffect, useState } from 'react'\nimport Nav from './Nav';\n\n\n\n\nconst Schedule = () => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n\n    const [ employees, setEmployees ] = useState([])\n\n    // variable to hold value of employee selected when adding shift with Add Shift button\n    // const [ employee, setEmployee ] = useState('') \n\n    const fetchEmployees = () => {\n\n        fetch('/employee/get_all_employees/')\n            .then(response => response.json())\n            .then(json => {\n                for (let item of json){\n                    setEmployees(prevEmployees => [...prevEmployees, `${item.first_name} ${item.last_name}`])\n                }\n            }).catch(error => {\n                console.error('Error:', error);\n            });\n\n    }\n\n    useEffect(() => fetchEmployees(), [])\n\n    const shifts = [\n       \n        { title: 'John', start: '2023-05-011T09:00:00', end: '2023-05-11T14:00:00', backgroundColor : 'red' },\n        { title: 'Jim', start: '2023-05-11T12:00:00', end: '2023-05-11T17:00:00' },\n        { title: 'Snoopy', start: '2023-05-11T16:00:00', end: '2023-05-11T20:00:00' },\n        { title: 'Snoopy', start: '2023-05-11T09:00:00', end: '2023-05-11T22:00:00' },\n        { title: 'Jane', start: '2023-05-12T10:00:00', end: '2023-05-12T15:00:00' },\n        \n      ];\n\n      const handleAdd = () => {\n\n        setIsOpen(true)\n\n        \n      }\n\n      const onClose = () => {\n        setIsOpen(false)\n\n      }\n\n      \n\n    return (\n        <>\n            <Nav/>\n\n            <Box height=\"1rem\" />\n\n            <Container maxH='20vh' maxW='container.xl' >\n\n                <Modal isOpen={isOpen} onClose={onClose} isCentered={true}>\n                    <ModalContent>\n                        <ModalHeader>Enter Shift Details</ModalHeader>\n                        <ModalBody>\n                            <Select placeholder='Select student'>\n                                {employees.map((item, index) => {\n                                    return (\n                                        <option key={index} value={'option'}>{item}</option>\n                                    )\n                                })}\n                            </Select>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button onClick={onClose}>Close</Button>\n                        </ModalFooter>\n                    </ModalContent>\n                </Modal>\n\n                <Button onClick={handleAdd}>Add Shift</Button>\n                <FullCalendar\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                    initialView=\"timeGridWeek\"\n                    weekends={false}\n                    events={shifts}\n                    slotMinTime=\"07:00:00\"\n                    slotMaxTime=\"22:00:00\"\n                    eventColor=\"#378006\"\n                    selectable={true}\n                    slotEventOverlap={false}\n                    allDaySlot={false}\n                    eventClick={() => alert('lol you clicked this fool')}      \n                />\n            </Container>\n        </>\n       \n    );\n}\n\nexport default Schedule"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AAEzD,SAASC,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,YAAY,EAAEC,WAAW,EAAEC,WAAW,EAAEC,MAAM,EAAEC,SAAS,QAAQ,kBAAkB;AAE3H,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAKxB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM,CAAEC,MAAM,EAAEC,SAAS,CAAE,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAAEU,SAAS,EAAEC,YAAY,CAAE,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA;;EAEA,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAEzBC,KAAK,CAAC,8BAA8B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAI;MACV,KAAK,IAAIC,IAAI,IAAID,IAAI,EAAC;QAClBL,YAAY,CAACO,aAAa,IAAI,CAAC,GAAGA,aAAa,EAAG,GAAED,IAAI,CAACE,UAAW,IAAGF,IAAI,CAACG,SAAU,EAAC,CAAC,CAAC;MAC7F;IACJ,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC,CAAC,CAAC;EAEV,CAAC;EAEDvB,SAAS,CAAC,MAAMa,cAAc,CAAC,CAAC,EAAE,EAAE,CAAC;EAErC,MAAMY,MAAM,GAAG,CAEX;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE,sBAAsB;IAAEC,GAAG,EAAE,qBAAqB;IAAEC,eAAe,EAAG;EAAM,CAAC,EACrG;IAAEH,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE,qBAAqB;IAAEC,GAAG,EAAE;EAAsB,CAAC,EAC1E;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,qBAAqB;IAAEC,GAAG,EAAE;EAAsB,CAAC,EAC7E;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,qBAAqB;IAAEC,GAAG,EAAE;EAAsB,CAAC,EAC7E;IAAEF,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE,qBAAqB;IAAEC,GAAG,EAAE;EAAsB,CAAC,CAE5E;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IAEtBpB,SAAS,CAAC,IAAI,CAAC;EAGjB,CAAC;EAED,MAAMqB,OAAO,GAAGA,CAAA,KAAM;IACpBrB,SAAS,CAAC,KAAK,CAAC;EAElB,CAAC;EAIH,oBACIN,OAAA,CAAAE,SAAA;IAAA0B,QAAA,gBACI5B,OAAA,CAACF,GAAG;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAENhC,OAAA,CAACZ,GAAG;MAAC6C,MAAM,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAErBhC,OAAA,CAACb,SAAS;MAAC+C,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC,cAAc;MAAAP,QAAA,gBAEtC5B,OAAA,CAACV,KAAK;QAACe,MAAM,EAAEA,MAAO;QAACsB,OAAO,EAAEA,OAAQ;QAACS,UAAU,EAAE,IAAK;QAAAR,QAAA,eACtD5B,OAAA,CAACT,YAAY;UAAAqC,QAAA,gBACT5B,OAAA,CAACR,WAAW;YAAAoC,QAAA,EAAC;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eAC9ChC,OAAA,CAACL,SAAS;YAAAiC,QAAA,eACN5B,OAAA,CAACN,MAAM;cAAC2C,WAAW,EAAC,gBAAgB;cAAAT,QAAA,EAC/BrB,SAAS,CAAC+B,GAAG,CAAC,CAACxB,IAAI,EAAEyB,KAAK,KAAK;gBAC5B,oBACIvC,OAAA;kBAAoBwC,KAAK,EAAE,QAAS;kBAAAZ,QAAA,EAAEd;gBAAI,GAA7ByB,KAAK;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAiC,CAAC;cAE5D,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACZhC,OAAA,CAACP,WAAW;YAAAmC,QAAA,eACR5B,OAAA,CAACX,MAAM;cAACoD,OAAO,EAAEd,OAAQ;cAAAC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eAERhC,OAAA,CAACX,MAAM;QAACoD,OAAO,EAAEf,SAAU;QAAAE,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9ChC,OAAA,CAACjB,YAAY;QACT2D,OAAO,EAAE,CAAC1D,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,CAAE;QAC5DyD,WAAW,EAAC,cAAc;QAC1BC,QAAQ,EAAE,KAAM;QAChBC,MAAM,EAAExB,MAAO;QACfyB,WAAW,EAAC,UAAU;QACtBC,WAAW,EAAC,UAAU;QACtBC,UAAU,EAAC,SAAS;QACpBC,UAAU,EAAE,IAAK;QACjBC,gBAAgB,EAAE,KAAM;QACxBC,UAAU,EAAE,KAAM;QAClBC,UAAU,EAAEA,CAAA,KAAMC,KAAK,CAAC,2BAA2B;MAAE;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA,eACd,CAAC;AAGX,CAAC;AAAA5B,EAAA,CA7FKD,QAAQ;AAAAmD,EAAA,GAARnD,QAAQ;AA+Fd,eAAeA,QAAQ;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}