{"ast":null,"code":"var _jsxFileName = \"/Users/cuevs/Projects/employee_schedule/frontend/src/Components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { Box, Button, Grid, Flex, Heading, Card, Text, useToast } from '@chakra-ui/react';\nimport { TimeIcon, CheckCircleIcon } from '@chakra-ui/icons';\nimport Nav from './Nav';\nimport useAuth from '../Hooks/UseAuth';\nimport { useContext, useCallback, useEffect, useState } from 'react';\nimport EmployeeShiftContext from '../EmployeeShiftContext';\nimport useRole from '../Hooks/useRole';\nimport ReviewRequestDialog from '../Overlay/ReviewRequestDialog';\nimport useWeeklyHours from '../Hooks/useWeeklyHours';\nimport useAddOpenShift from '../Hooks/useAddOpenShift';\nimport useGetOpenShift from '../Hooks/useGetOpenShift';\nimport useUserId from '../Hooks/useUserId';\nimport ConfirmCoverage from '../Overlay/ConfirmCoverage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const authToken = useAuth();\n  const role = useRole();\n  const toast = useToast();\n  const {\n    shifts,\n    adjustments,\n    setAdjustments,\n    fetchShift,\n    openShifts,\n    setOpenShifts,\n    employees\n  } = useContext(EmployeeShiftContext);\n\n  //fetch shifts on component mount\n  useEffect(() => {\n    fetchShift();\n  }, [fetchShift]);\n\n  //fetch weekly hours for user\n  const hours = useWeeklyHours();\n\n  //fetch open shifts\n  const fetchOpenShifts = useGetOpenShift(setOpenShifts);\n\n  //state variables and funciton for open shifts\n  const addOpenShift = useAddOpenShift();\n  const userId = useUserId();\n  const [currentEmployee, setCurrentEmployee] = useState('');\n\n  //set employee id for current user\n  useEffect(() => {\n    setCurrentEmployee(employees.find(employee => employee.user === userId));\n  }, [employees, userId]);\n\n  //state variables and functions for Confirm Coverage Dialog\n  const [isConfirmCoverageDialogOpen, setIsConfirmCoverageDialogOpen] = useState(false);\n  const closeConfirmCoverageDialog = () => {\n    setIsConfirmCoverageDialogOpen(false);\n  };\n  const triggerConfirmCoverage = shift => {\n    setIsConfirmCoverageDialogOpen(true);\n  };\n  const confirmShiftCoverage = shift => {\n    fetch('/shift/add_shift/', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': `Token ${authToken}`\n      },\n      body: JSON.stringify({\n        student: currentEmployee.id,\n        start_time: shift.start_time,\n        end_time: shift.end_time,\n        date: shift.date\n      })\n    }).then(response => response.json()).then(json => {\n      console.log(json, 'added a shift');\n      fetchShift();\n      toast({\n        title: 'Shift Coverage Accepted',\n        status: 'success',\n        duration: 9000,\n        isClosable: true\n      });\n    }).then(fetch(`/delete_open_shift/${shift.id}/`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Token ${authToken}`\n      }\n    }).then(() => {\n      fetchShift();\n    }).catch(error => console.log(error))).catch(error => console.log(error));\n    closeConfirmCoverageDialog();\n  };\n\n  //state variables and functions for Review Request Dialog\n  const [isOpen, setIsOpen] = useState(false);\n  const [full, setFull] = useState(false);\n  const [currentAdjustment, setCurrentAdjustment] = useState(null);\n  const closeRequestDialog = () => {\n    setIsOpen(false);\n  };\n  const approveRequest = () => {\n    if (full) {\n      fetch(`/shift/delete_shift/${currentAdjustment.shift_id}/`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Token ${authToken}`\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw response;\n        }\n        return response;\n      }).then(() => {\n        fetch(`update_adjustment/${currentAdjustment.adj_id}/`, {\n          method: 'PATCH',\n          headers: {\n            'Content-type': 'application/json',\n            'Authorization': `Token ${authToken}`\n          },\n          body: JSON.stringify({\n            approved: true\n          })\n        }).then(response => {\n          if (!response.ok) {\n            throw response;\n          } else {\n            return response.json();\n          }\n        }).then(json => {\n          console.log(json);\n          fetchShift();\n          fetchAdjustments();\n          addOpenShift(currentAdjustment.start, currentAdjustment.end, currentAdjustment.date);\n          fetchOpenShifts();\n          toast({\n            title: 'Time-off request approved',\n            status: 'success',\n            duration: 9000,\n            isClosable: true\n          });\n        }).catch(error => console.error(error));\n      }).catch(error => console.error(error));\n    } else {\n      fetch(`/shift/update_shift/${currentAdjustment.shift_id}/`, {\n        method: 'PATCH',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Token ${authToken}`\n        },\n        body: JSON.stringify({\n          start_time: currentAdjustment.start,\n          end_time: currentAdjustment.end\n        })\n      }).then(response => {\n        if (!response.ok) {\n          throw response;\n        } else {\n          return response.json();\n        }\n      }).then(json => {\n        console.log(json);\n        fetchShift();\n      }).then(() => {\n        fetch(`update_adjustment/${currentAdjustment.adj_id}/`, {\n          method: 'PATCH',\n          headers: {\n            'Content-type': 'application/json',\n            'Authorization': `Token ${authToken}`\n          },\n          body: JSON.stringify({\n            approved: true\n          })\n        }).then(response => {\n          if (!response.ok) {\n            throw response;\n          } else {\n            return response.json();\n          }\n        }).then(json => {\n          console.log(json);\n          fetchShift();\n          fetchAdjustments();\n          toast({\n            title: 'Time-off request approved',\n            status: 'success',\n            duration: 9000,\n            isClosable: true\n          });\n        }).catch(error => console.error(error));\n      }).catch(error => console.error(error));\n    }\n    setIsOpen(false);\n  };\n  const reviewRequest = adjustment => {\n    setIsOpen(true);\n    setFull(adjustment.type_of_coverage === 'full');\n    setCurrentAdjustment(adjustment);\n  };\n  const fetchAdjustments = useCallback(() => {\n    fetch('retrieve_adjustments/', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Token ${authToken}`\n      }\n    }).then(response => response.json()).then(json => {\n      const data = json.map(adjustment => ({\n        adj_id: adjustment.id,\n        employee: adjustment.employee,\n        date: adjustment.date,\n        shift_id: adjustment.shift,\n        type_of_coverage: adjustment.type_of_coverage,\n        start: adjustment.start,\n        end: adjustment.end,\n        approved: adjustment.approved,\n        user: adjustment.user\n      }));\n      setAdjustments(data);\n    });\n  }, [authToken, setAdjustments]);\n  useEffect(() => {\n    fetchAdjustments();\n  }, [fetchAdjustments]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      p: 4,\n      color: \"white\",\n      bg: \"red.700\",\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: !role ? 'Welcome to the Employee Dashboard' : 'Welcome to the Supervisor Dashboard'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }, this), !role && /*#__PURE__*/_jsxDEV(Text, {\n        size: \"md\",\n        children: [\"Hours scheduled for the week: \", hours]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      templateColumns: {\n        base: \"1fr\",\n        md: \"1fr 1fr\"\n      },\n      gap: 6,\n      children: [!role && /*#__PURE__*/_jsxDEV(Box, {\n        bg: \"white\",\n        boxShadow: \"sm\",\n        p: 4,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"sm\",\n          children: \"My time off requests:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this), adjustments.length && adjustments.map(adjustment => {\n          return /*#__PURE__*/_jsxDEV(Text, {\n            mt: 4,\n            mb: 4,\n            children: [adjustment.type_of_coverage, \" coverage request on \", adjustment.date, \" Status: \", adjustment.approved && /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n              color: 'green'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 163\n            }, this), \" \", !adjustment.approved && /*#__PURE__*/_jsxDEV(TimeIcon, {\n              color: \"red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 224\n            }, this), \" \"]\n          }, adjustment.adj_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }, this), !role && /*#__PURE__*/_jsxDEV(Box, {\n        bg: \"white\",\n        boxShadow: \"sm\",\n        p: 4,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"sm\",\n          children: \"Shifts Available for coverage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), openShifts.length && openShifts.map(item => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            padding: 6,\n            mt: 4,\n            mb: 4,\n            children: [item.date, \" from \", item.start, \" to \", item.end, \" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => triggerConfirmCoverage(item),\n              children: \"Cover Shift\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 107\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), role && /*#__PURE__*/_jsxDEV(Box, {\n        bg: \"white\",\n        boxShadow: \"sm\",\n        p: 4,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: \"Time off Requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), adjustments.filter(adjustment => !adjustment.approved).map(adjustment => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            padding: 6,\n            mt: 4,\n            mb: 4,\n            children: [adjustment.employee, \" is requesting a \", adjustment.type_of_coverage, \" shift adjustment on \", adjustment.date, \" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => reviewRequest(adjustment),\n              children: \"Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 181\n            }, this)]\n          }, adjustment.adj_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReviewRequestDialog, {\n      isOpen: isOpen,\n      closeRequestDialog: closeRequestDialog,\n      full: full,\n      date: currentAdjustment === null || currentAdjustment === void 0 ? void 0 : currentAdjustment.date,\n      start: currentAdjustment === null || currentAdjustment === void 0 ? void 0 : currentAdjustment.start,\n      end: currentAdjustment === null || currentAdjustment === void 0 ? void 0 : currentAdjustment.end,\n      approveRequest: approveRequest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmCoverage, {\n      isConfirmCoverageDialogOpen: isConfirmCoverageDialogOpen,\n      closeConfirmCoverageDialog: closeConfirmCoverageDialog,\n      confirmShiftCoverage: confirmShiftCoverage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      bg: \"white\",\n      boxShadow: \"sm\",\n      p: 4,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"Schedule for today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"timeGridDay\",\n        weekends: false,\n        events: shifts,\n        slotMinTime: \"07:00:00\",\n        slotMaxTime: \"22:00:00\",\n        eventColor: \"#378006\",\n        selectable: false,\n        slotEventOverlap: false,\n        allDaySlot: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 7\n  }, this);\n};\n_s(Dashboard, \"dqy+b5d81/OWDoayyYjjwwVS3B0=\", false, function () {\n  return [useAuth, useRole, useToast, useWeeklyHours, useGetOpenShift, useAddOpenShift, useUserId];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Box","Button","Grid","Flex","Heading","Card","Text","useToast","TimeIcon","CheckCircleIcon","Nav","useAuth","useContext","useCallback","useEffect","useState","EmployeeShiftContext","useRole","ReviewRequestDialog","useWeeklyHours","useAddOpenShift","useGetOpenShift","useUserId","ConfirmCoverage","jsxDEV","_jsxDEV","Dashboard","_s","authToken","role","toast","shifts","adjustments","setAdjustments","fetchShift","openShifts","setOpenShifts","employees","hours","fetchOpenShifts","addOpenShift","userId","currentEmployee","setCurrentEmployee","find","employee","user","isConfirmCoverageDialogOpen","setIsConfirmCoverageDialogOpen","closeConfirmCoverageDialog","triggerConfirmCoverage","shift","confirmShiftCoverage","fetch","method","headers","body","JSON","stringify","student","id","start_time","end_time","date","then","response","json","console","log","title","status","duration","isClosable","catch","error","isOpen","setIsOpen","full","setFull","currentAdjustment","setCurrentAdjustment","closeRequestDialog","approveRequest","shift_id","ok","adj_id","approved","fetchAdjustments","start","end","reviewRequest","adjustment","type_of_coverage","data","map","children","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","justifyContent","p","color","bg","mb","size","templateColumns","base","md","gap","boxShadow","length","mt","item","padding","onClick","filter","plugins","initialView","weekends","events","slotMinTime","slotMaxTime","eventColor","selectable","slotEventOverlap","allDaySlot","_c","$RefreshReg$"],"sources":["/Users/cuevs/Projects/employee_schedule/frontend/src/Components/Dashboard.js"],"sourcesContent":["import FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from \"@fullcalendar/interaction\"; \n\nimport {\n    Box,\n    Button,\n    Grid,\n    Flex,\n    Heading,\n    Card,\n    Text,\n    useToast,\n} from '@chakra-ui/react';\n\nimport { TimeIcon, CheckCircleIcon } from '@chakra-ui/icons';\n\nimport Nav from './Nav';\nimport useAuth from '../Hooks/UseAuth';\n\nimport { useContext, useCallback, useEffect, useState } from 'react';\nimport EmployeeShiftContext from '../EmployeeShiftContext';\n\nimport useRole from '../Hooks/useRole';\nimport ReviewRequestDialog from '../Overlay/ReviewRequestDialog';\nimport useWeeklyHours from '../Hooks/useWeeklyHours';\nimport useAddOpenShift from '../Hooks/useAddOpenShift';\nimport useGetOpenShift from '../Hooks/useGetOpenShift';\nimport useUserId from '../Hooks/useUserId';\nimport ConfirmCoverage from '../Overlay/ConfirmCoverage';\n\n  \nconst Dashboard = () => {\n\n  const authToken = useAuth();\n  const role = useRole();\n  const toast = useToast()\n  const { shifts, adjustments, setAdjustments, fetchShift, openShifts, setOpenShifts, employees } = useContext(EmployeeShiftContext)\n\n  //fetch shifts on component mount\n  useEffect(() => {\n    fetchShift()\n  }, [fetchShift])\n\n  //fetch weekly hours for user\n  const hours = useWeeklyHours()\n\n  //fetch open shifts\n  const fetchOpenShifts = useGetOpenShift(setOpenShifts)\n\n  //state variables and funciton for open shifts\n  const addOpenShift = useAddOpenShift()\n\n  const userId = useUserId()\n\n  const [ currentEmployee, setCurrentEmployee ] = useState('')\n\n  //set employee id for current user\n  useEffect(() => {\n    setCurrentEmployee(employees.find((employee) => employee.user === userId))\n  }, [employees, userId])\n\n  //state variables and functions for Confirm Coverage Dialog\n  const [ isConfirmCoverageDialogOpen, setIsConfirmCoverageDialogOpen ] = useState(false)\n  const closeConfirmCoverageDialog = () => {\n    setIsConfirmCoverageDialogOpen(false)\n  }\n  const triggerConfirmCoverage = (shift) => {\n    setIsConfirmCoverageDialogOpen(true)\n  }\n  const confirmShiftCoverage = (shift) => {\n\n    fetch('/shift/add_shift/', {\n      method : 'POST',\n      headers : {\n          'Content-type' : 'application/json',\n          'Authorization': `Token ${authToken}`\n      },\n      body : JSON.stringify({\n        student : currentEmployee.id, \n        start_time : shift.start_time,\n        end_time : shift.end_time,\n        date : shift.date,\n      })\n    })\n      .then(response => response.json())\n      .then(json => {\n          console.log(json, 'added a shift');\n          fetchShift();\n          toast({\n              title: 'Shift Coverage Accepted',\n              status: 'success',\n              duration: 9000,\n              isClosable: true,\n            })\n        })\n          .then(\n            fetch(`/delete_open_shift/${shift.id}/`,{\n            method : 'DELETE',\n            headers : {\n                'Authorization' : `Token ${authToken}`,\n            },\n        })\n            .then(() => {\n                fetchShift()\n            })\n            .catch(error => console.log(error))\n          )\n          .catch(error => console.log(error))\n\n      closeConfirmCoverageDialog()\n\n  }\n\n  //state variables and functions for Review Request Dialog\n  const [ isOpen, setIsOpen ] = useState(false)\n  const [ full, setFull ] = useState(false)\n  const [ currentAdjustment, setCurrentAdjustment] = useState(null)\n  const closeRequestDialog = () => {\n    setIsOpen(false)\n  }\n  const approveRequest = () => {\n    if(full){\n      fetch(`/shift/delete_shift/${currentAdjustment.shift_id}/`, {\n        method: 'DELETE',\n        headers : {\n          'Authorization' : `Token ${authToken}`,\n        }\n      })\n        .then(response => {\n          if(!response.ok){\n            throw response\n          }\n\n          return response\n        })\n        .then(() => {\n          fetch(`update_adjustment/${currentAdjustment.adj_id}/`, {\n            method : 'PATCH',\n            headers : {\n              'Content-type' : 'application/json',\n              'Authorization': `Token ${authToken}`\n            },\n            body : JSON.stringify({\n                approved : true\n            })\n          })\n            .then(response => {\n              if(!response.ok){\n                throw response\n              }\n              else{\n                return response.json()\n              }\n\n            })\n            .then(json => {\n              console.log(json)\n              fetchShift()\n              fetchAdjustments()\n              addOpenShift(currentAdjustment.start, currentAdjustment.end, currentAdjustment.date)\n              fetchOpenShifts()\n              toast({\n                title: 'Time-off request approved',\n                status: 'success',\n                duration: 9000,\n                isClosable: true,\n              })\n            })\n\n            .catch(error => console.error(error))\n            \n\n        }).catch(error => console.error(error))\n        \n    }\n    else{\n\n      fetch(`/shift/update_shift/${currentAdjustment.shift_id}/`, {\n        method: 'PATCH',\n        headers : {\n          'Content-type' : 'application/json',\n          'Authorization' : `Token ${authToken}`,\n        },\n        body : JSON.stringify({\n          start_time : currentAdjustment.start,\n          end_time : currentAdjustment.end\n        })\n      })\n        .then(response => {\n          if(!response.ok){\n            throw response\n          }\n          else {\n            return response.json()\n          }\n          \n        })\n        .then(json => {\n          console.log(json)\n          fetchShift()\n        })\n        .then(() => {\n          fetch(`update_adjustment/${currentAdjustment.adj_id}/`, {\n            method : 'PATCH',\n            headers : {\n              'Content-type' : 'application/json',\n              'Authorization': `Token ${authToken}`\n            },\n            body : JSON.stringify({\n                approved : true\n            })\n          })\n            .then(response => {\n              if(!response.ok){\n                throw response\n              }\n              else{\n                return response.json()\n              }\n            })\n            .then(json => {\n              console.log(json)\n              fetchShift()\n              fetchAdjustments()\n              toast({\n                title: 'Time-off request approved',\n                status: 'success',\n                duration: 9000,\n                isClosable: true,\n              })\n            })\n            .catch(error => console.error(error))\n            \n\n        }).catch(error => console.error(error))\n    }  \n    setIsOpen(false)\n  }\n  const reviewRequest = (adjustment) => {\n    setIsOpen(true)\n    setFull(adjustment.type_of_coverage === 'full')\n    setCurrentAdjustment(adjustment)\n  }\n\n\n  const fetchAdjustments = useCallback(() => {\n    fetch('retrieve_adjustments/', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Token ${authToken}`,\n      },\n    })\n      .then(response => response.json())\n      .then(json => {\n        const data = json.map(adjustment => ({\n          adj_id : adjustment.id,\n          employee : adjustment.employee,\n          date : adjustment.date,\n          shift_id : adjustment.shift,\n          type_of_coverage : adjustment.type_of_coverage,\n          start : adjustment.start,\n          end : adjustment.end,\n          approved : adjustment.approved,\n          user : adjustment.user,\n        }))\n\n        setAdjustments(data)\n      })\n  }, [authToken, setAdjustments])\n\n  useEffect(() => {\n    fetchAdjustments()\n  }, [fetchAdjustments])\n     \n\n  return (\n      <Box>\n        <Nav />\n        \n        <Flex alignItems=\"center\" justifyContent=\"space-between\"  p={4} color=\"white\" bg='red.700' mb={4}>\n            <Heading>\n              { !role ? 'Welcome to the Employee Dashboard' : 'Welcome to the Supervisor Dashboard'}\n            </Heading>\n            {! role && <Text size='md'>Hours scheduled for the week: {hours}</Text>}\n        </Flex>\n\n        <Grid templateColumns={{base: \"1fr\", md: \"1fr 1fr\"}} gap={6}>\n          {!role &&\n            <Box bg=\"white\" boxShadow=\"sm\" p={4}>\n              <Heading size='sm'>My time off requests:</Heading>\n              {adjustments.length && adjustments.map((adjustment) => {\n                return(\n                  <Text key={adjustment.adj_id} mt={4} mb={4}>{adjustment.type_of_coverage} coverage request on {adjustment.date} Status: {adjustment.approved && <CheckCircleIcon color={'green'}/>} {!adjustment.approved && <TimeIcon color='red'/>} </Text>\n                )\n            })}\n          </Box>\n        }\n        {!role &&  \n          <Box bg=\"white\" boxShadow=\"sm\" p={4}> \n            <Heading size='sm'>Shifts Available for coverage</Heading>\n            {openShifts.length && openShifts.map((item) => {\n              return (\n                <Card key={item.id} padding={6} mt={4} mb={4}>{item.date} from {item.start} to {item.end} <Button onClick={() => triggerConfirmCoverage(item)}>Cover Shift</Button></Card>\n            )})}\n            \n          </Box>\n        }\n          \n        {role &&\n          <Box bg=\"white\" boxShadow=\"sm\" p={4}>\n            <Heading size='md'>Time off Requests</Heading>      \n              {adjustments.filter(adjustment => !adjustment.approved).map((adjustment) => {\n                return(\n                  <Card key={adjustment.adj_id} padding={6} mt={4} mb={4}>{adjustment.employee} is requesting a {adjustment.type_of_coverage} shift adjustment on {adjustment.date} <Button onClick={() => reviewRequest(adjustment)}>Review</Button></Card>\n                )\n              })}\n          </Box> \n        }\n           \n        </Grid>\n\n          <ReviewRequestDialog \n            isOpen={isOpen}\n            closeRequestDialog={closeRequestDialog}\n            full={full}\n            date={currentAdjustment?.date}\n            start={currentAdjustment?.start}\n            end={currentAdjustment?.end}\n            approveRequest={approveRequest}\n          />\n\n          <ConfirmCoverage \n            isConfirmCoverageDialogOpen={isConfirmCoverageDialogOpen}\n            closeConfirmCoverageDialog={closeConfirmCoverageDialog}\n            confirmShiftCoverage={confirmShiftCoverage}\n          />\n              \n\n          <Box mt={4} bg=\"white\" boxShadow=\"sm\" p={4}>\n            <Heading size=\"md\">Schedule for today</Heading>\n            <FullCalendar\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n              initialView=\"timeGridDay\"\n              weekends={false}\n              events={shifts}\n              slotMinTime=\"07:00:00\"\n              slotMaxTime=\"22:00:00\"\n              eventColor=\"#378006\"\n              selectable={false}\n              slotEventOverlap={false}\n              allDaySlot={false}      \n            />  \n        </Box>\n      </Box>\n    );\n  }\n  \nexport default Dashboard;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}